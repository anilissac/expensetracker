@using ExpenseTracker.DAL.Utilities
@using ExpenseTracker.DAL.Models;
@{
    Layout = "_ShopLayout";
    ViewData["Title"] = "Todays Purchases";
}
@section Styles
    {
    <style>

    </style>
    }
@section Scripts
    {
    <script>
        $(document).ready(function () {
            $('#PurchasedOn').val(moment().format("YYYY-MM-DD"));
            $('#PurchasedOn').focus();

            $.getJSON('/Purchase/GetVendors', function (result) {
                FillDropdown("#VendorID", result);
                $('#VendorID').val(-1);
            });
            $('#PaymentMode').val(-1);

            // Datatable Starts
            $('#tblPurchases').DataTable({
                dom: 'Brtip',
                "pageLength": 10,
                "order": [],
                'columnDefs': [{
                    "width": "20%",
                    "className": "text-left",
                    'targets': [4],
                }
                ],
                buttons: [
                    {
                        extend: 'copyHtml5',
                        text: '<i class="fa fa-files-o"></i>',
                        titleAttr: 'Copy',
                        exportOptions: {
                            orthogonal: 'export',
                            columns: [0, 1, 2, 3, 4]
                        }

                    },
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel-o"></i>',
                        titleAttr: 'Excel',
                        title: $('#lblPurchases').val(),
                        exportOptions: {
                            orthogonal: 'export',
                            columns: [0, 1, 2, 3, 4]
                        }
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fa fa-file-text-o"></i>',
                        titleAttr: 'CSV',
                        title: $('#lblPurchases').val(),
                        exportOptions: {
                            orthogonal: 'export',
                            columns: [0, 1, 2, 3, 4]
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        text: '<i class="fa fa-file-pdf-o"></i>',
                        titleAttr: 'PDF',
                        title: $('#lblPurchases').val(),
                        exportOptions: {
                            orthogonal: 'export',
                            columns: [0, 1, 2, 3, 4]
                        }
                    }
                ],

            });//table
        });
        function Remove(enID) {

            swal({ title: "Remove Purchase Entry", text: "Do you want to delete this purchase entry?", type: "warning", showCancelButton: true, confirmButtonColor: "#F44335", confirmButtonText: "YES!", cancelButtonText: "NO!", closeOnConfirm: false, closeOnCancel: true },
                function (isConfirm) {
                    if (isConfirm) {
                        $.ajax(
                            {
                                type: "POST", //HTTP POST Method
                                url: "/Purchase/RemovePurchase?sen=" + enID, // Controller/View
                                success: function (successdata) {
                                    location.reload();
                                }
                            });//ajax
                    }//if confirm
                }//fun confirm
            );//swal
        }
    </script>
}

<div class="row">
    <div class="col-12 col-xl-4">
        <div class="card card-plain h-100">
            <div class="card-header pb-0 p-3">
                <h6 class="mb-0">Record Purchase</h6>
            </div>
            <div class="card-body p-3">
                @using (Html.BeginForm("SavePurchase", "Purchase", FormMethod.Post))
                {
                    <div class="input-group input-group-outline mb-3">
                        <label class="form-label">Purchased On</label>
                        <input id="PurchasedOn" name="PurchasedOn" type="date" class="form-control">
                    </div>
                    <div class="input-group input-group-outline mb-3">
                        <label class="form-label">Vendor</label>
                        <select id="VendorID" name="VendorID" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)">
                        </select>
                    </div>
                    <div class="input-group input-group-outline mb-3">
                        <label class="form-label">Item Description</label>
                        <input id="Description" name="Description" type="text" class="form-control">
                    </div>
                    <div class="input-group input-group-outline mb-3">
                        <label class="form-label">Amount</label>
                        <input id="TotalAmount" name="TotalAmount" type="number" class="form-control">
                    </div>
                    <div class="input-group input-group-outline mb-3">
                        <label class="form-label">Payment Mode</label>
                        <select id="PaymentMode" name="PaymentMode" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)">
                            <option value="1">Cash</option>
                            <option value="2">Credit</option>
                        </select>
                    </div>
                    <div class="input-group input-group-outline mb-3">
                        <label class="form-label">Payment Remarks</label>
                        <input id="PaymentRemark" name="PaymentRemark" type="text" class="form-control">
                    </div>
                 
                    <div class="text-center">
                        <button type="submit" class="btn btn-lg bg-gradient-primary btn-lg w-100 mt-4 mb-0">Save</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-12 col-xl-8">
        <div class="card card-plain h-100">
            <div class="card-header pb-0 p-3">
                <h6 id="lblPurchases" class="mb-0"><span class="text-primary"> @Server.DateNow().ToString("dddd, dd MMMM yyyy")</span> - Purchases</h6>
            </div>
            <div class="card-body p-3">
                <table id="tblPurchases" class="table table-hover table-striped" width="100%">
                    <thead>
                        <tr>
                            <th>Vendor</th>
                            <th>Item Description</th>
                            <th>Amount</th>
                            <th>Recorded By</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody class="table-border-bottom-0">
                        @foreach (var data in (IEnumerable<PurchaseView>)ViewData["Purchases"])
                        {
                            <tr>
                                <td>@data.VendorName</td>
                                <td>@data.Description</td>
                                <td>@data.TotalAmount</td>
                                @if (data.ModifiedDate == null)
                                {
                                    <td>@data.CreatedDate.ToString("dd/MM/yyyy hh:mm tt") <br /> @data.CreatedByName</td>
                                }
                                else
                                {
                                    <td>@data.ModifiedDate.Value.ToString("dd/MM/yyyy hh:mm tt") <br /> @data.ModifiedByName</td>
                                }

                                <td>
                                    <button class="btn btn-sm btn-danger" title="Remove" onclick="Remove('@data.enPurchaseID')"><i class="fa fa-trash"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>