@using ExpenseTracker.DAL.Utilities
@using ExpenseTracker.DAL.Models;
@{
    ViewData["Title"] = "Calendar";
}
@section Styles
    {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/lib/fullcalendar/dist/fullcalendar.css")" />
    <style>
        .bootstrap-select.form-control {
            border: 1px solid #d9dee3;
        }

        #CalendarEvent {
            width: 900px;
        }

        .text-big {
            font-size: 20px;
        }
    </style>
}
@section Scripts
    {
    <script src="https://code.jquery.com/jquery-migrate-3.4.1.js"></script>
    <script type="text/javascript" src="@Url.Content("~/lib/fullcalendar/dist/moment.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/lib/fullcalendar/dist/fullcalendar.js")"></script>

    <script>
        jQuery.migrateEnablePatches("self-closed-tags");
        $(document).ready(function () {



            $.getJSON('/Settings/GetOrgUnits', function (result) {
                FillDropdown("#OrgUnitID", result);

            });

            $.getJSON('/Account/GetAppUsers', function (result) {
                FillDropdown("#AssignedTo", result);

            });

            var CalLoading = true;
            $('#calendar').fullCalendar({
                defaultView: 'month',
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },

                editable: true,
                //businessHours:
                //    [
                //        {
                //            start: '09:00', // a start time (10am in this example)
                //            end: '17:00', // an end time (12pm in this example)
                //            dow: [0,1, 2, 3, 4]
                //            // days of week. an array of zero-based day of week integers (0=Sunday)
                //            // (Monday-Thursday in this example)
                //        },
                //        {
                //            start: '09:00', // a start time (12pm in this example)
                //            end: '13:00', // an end time (6pm in this example)
                //            dow: [7]
                //            // days of week. an array of zero-based day of week integers (0=Sunday)
                //            // (Monday-Thursday in this example)
                //        }],
                //allDaySlot: true,
                //selectable: true,
                //slotMinutes: 60,
                events: '/Admin/GetCalendarEvents/',

                eventClick: function (calEvent, jsEvent, view) {





                     $.getJSON('/Admin/GetCalendarEvent?CalendarEventID=' + calEvent.id, function (result) {

                        $('#CalendarEventID').val(calEvent.id);
                        $('#EventTypeID').val(result.EventTypeID);
                        if (calEvent.start != null) $('#EventStartDateTime').val($.fullCalendar.formatDate(calEvent.start, 'YYYY-MM-DD HH:mm'));
                       if(calEvent.end!=null) $('#EventEndDateTime').val($.fullCalendar.formatDate(calEvent.end, 'YYYY-MM-DD HH:mm'));
                        $('#EventTitle').val(calEvent.title);
                        $('#EventDescription').val(calEvent.description);


                        $('#CalendarEvent').offcanvas('toggle');
                        $('#EventTitle').focus();





                    });


                },

                eventDrop: function (event, dayDelta, minuteDelta, allDay, revertFunc) {

                      swal({ title: "Change Schedule", text: "Do you want to change schedule length?", type: "warning", showCancelButton: true, confirmButtonColor: "#009900", confirmButtonText: "YES!", cancelButtonText: "NO!", closeOnConfirm: false, closeOnCancel: true },
                    function (isConfirm) {
                    if (isConfirm) {
                                UpdateEvent(event.id, event.start, event.end);
                            }//if confirm
                            else
                            {
                                revertFunc();
                            }

                        }//fun confirm
                    );//swal

                },

                eventResize: function (event, dayDelta, minuteDelta, revertFunc) {

                    swal({ title: "Change Schedule", text: "Do you want to change schedule length?", type: "warning", showCancelButton: true, confirmButtonColor: "#009900", confirmButtonText: "YES!", cancelButtonText: "NO!", closeOnConfirm: false, closeOnCancel: true },
                    function (isConfirm) {
                    if (isConfirm) {
                                UpdateEvent(event.id, event.start, event.end);
                            }//if confirm
                            else
                            {
                                revertFunc();
                            }

                        }//fun confirm
                    );//swal


                },

                dayClick: function (date, allDay, jsEvent, view) {
                    $('#CalendarEventID').val(0);
                    $('#EventTypeID').val(2);
                    $('#EventStartDateTime').val($.fullCalendar.formatDate(date, 'YYYY-MM-DD HH:mm'));
                    $('#EventEndDateTime').val($.fullCalendar.formatDate(moment(date).add(2, 'hours'), 'YYYY-MM-DD HH:mm'));
                    $('#EventTitle').val("");
                    $('#EventDescription').val("");
                    $('#OrgUnitID').val("");
                    $('#AssignedTo').val("");
                    $('#CalendarEvent').offcanvas('toggle');
                    $('#EventTitle').focus();
                },

                viewRender: function (view, element) {
                    //if (!CalLoading) {
                    //    if (view.name == 'month') {
                    //        $('#calendar').fullCalendar('removeEventSource', sourceFullView);
                    //        $('#calendar').fullCalendar('removeEvents');
                    //        $('#calendar').fullCalendar('addEventSource', sourceSummaryView);
                    //    }
                    //    else {
                    //        $('#calendar').fullCalendar('removeEventSource', sourceSummaryView);
                    //        $('#calendar').fullCalendar('removeEvents');
                    //        $('#calendar').fullCalendar('addEventSource', sourceFullView);
                    //    }
                    //}

                    //$("#calendar").fullCalendar('removeEvents');
                    //$("#calendar").fullCalendar('addEventSource', nevent);
                    //$("#calendar").fullCalendar('rerenderEvents');

                }

            });

        });

        $(document).ready(function () {
            //DropDown for Event Types



        });


        function SaveEvent() {
            var dataRow = {
                'CalendarEventID': $('#CalendarEventID').val(),
                'EventTitle': $('#EventTitle').val(),
                'EventStartDateTime': $('#EventStartDateTime').val(),
                'EventEndDateTime': $('#EventEndDateTime').val(),
                'EventTypeID': $('#EventTypeID').val(),
                'OrgUnitID': $('#OrgUnitID').val(),
                'AssignedTo': $('#AssignedTo').val(),
                'EventDescription': $('#EventDescription').val()
            }

            $.ajax({
                type: 'POST',
                url: "/Admin/SaveCalendarEvent",
                data: dataRow,
                success: function (response) {
                    if (response == true) {
                        swal("Save Task", "Event updated!", "success");
                        $('#calendar').fullCalendar('refetchEvents');
                        $('#CalendarEvent').offcanvas('toggle');
                        $('#EventTitle').focus();
                    }
                    else {
                        swal("Error", "Could not save event", "error");
                    }
                }
            });
        }

        function UpdateEvent(CalendarEventID, EventStartDateTime, EventEndDateTime) {




            var dataRow = {
                'CalendarEventID': CalendarEventID,
                'EventTitle': $('#EventTitle').val(),
                'EventStartDateTime': moment(EventStartDateTime).format('Y-MM-DD HH:mm:ss'),
                'EventEndDateTime': moment(EventEndDateTime).format('Y-MM-DD HH:mm:ss'),
                'OrgUnitID': $('#OrgUnitID').val(),
                'AssignedTo': $('#AssignedTo').val(),
                'EventDescription': $('#EventDescription').val()
            }
            $.ajax({
                type: 'POST',
                url: "/Admin/UpdateCalendarEvent",
                data: dataRow,
                success: function (response) {
                    if (response == true) {
                        swal("Update Schedule", "Task updated!", "success");
                        $('#calendar').fullCalendar('refetchEvents');
                    }
                    else {
                        swal("Error", "Could not save Task", "error");
                    }
                }
            });
        }

        function RemoveEvent() {

            swal({ title: "Remove Schedule", text: "Do you want to delete this Task?", type: "warning", showCancelButton: true, confirmButtonColor: "#009900", confirmButtonText: "YES!", cancelButtonText: "NO!", closeOnConfirm: false, closeOnCancel: true },
                function (isConfirm) {
                    if (isConfirm) {
                        $.ajax(
                            {
                                type: "POST", //HTTP POST Method
                                url: "/Admin/RemoveCalendarEvent?CalendarEventID=" + $('#CalendarEventID').val(), // Controller/View
                                success: function (successdata) {
                                    location.reload();
                                }
                            });//ajax
                    }//if confirm
                }//fun confirm
            );//swal
        }
    </script>
}
<div class="row">
    <div class="col-12">
        <div class="card my-4">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
                    <h6 class="text-white text-capitalize ps-3">@ViewData["Title"]</h6>
                </div>
            </div>
            <div class="card-body p-3">

            <div id="calendar"></div>
            </div>
        </div>
    </div>
</div>





<!-- / Calendar Event -->
<div class="offcanvas offcanvas-end"
     data-bs-scroll="true"
     tabindex="-1"
     id="CalendarEvent"
     aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
       <h5 id="offcanvasBothLabel" class="offcanvas-title">Add Task</h5>
        <button type="button"
                class="btn-close text-reset"
                data-bs-dismiss="offcanvas"
                aria-label="Close"></button>
    </div>
    <div class="offcanvas-body @*my-auto mx-0 flex-grow-0*@">

        <input type="hidden" id="CalendarEventID" name="CalendarEventID" value="">
        <input type="hidden" id="EventTypeID" name="EventTypeID" value="2">
        <div class="row">
                    <div class="mb-3 col-md-12">
                        <label class="form-label" for="EventTitle">Task</label>
                        <input type="text" id="EventTitle" name="EventTitle" class="form-control" value="" autofocus>
                    </div>
            <div class="mb-3 col-md-6">
                <label class="form-label" for="EventStartDateTime">Starts On</label>
                <input type="datetime-local" id="EventStartDateTime" name="EventStartDateTime" class="form-control" value="">
            </div>
            <div class="mb-3 col-md-6">
                <label class="form-label" for="EventEndDateTime" id="lblEventEndDateTime">Ends On</label>
                <input type="datetime-local" id="EventEndDateTime" name="EventEndDateTime" class="form-control" value="">
            </div>

            <div class="mb-3 col-md-12">
                <label class="form-label" for="OrgUnitID">Restaurant</label>
                <select class="mb-2 form-select" name="OrgUnitID" id="OrgUnitID" title="Select">
                </select>
            </div>

            <div class="mb-3 col-md-12">
                <label class="form-label" for="AssignedTo">Assigned To</label>
                <select class="mb-2 form-select" name="AssignedTo" id="AssignedTo" title="Select">
                </select>
            </div>


            <div class="mb-3 col-md-12">
                <label class="form-label" for="EventDescription">Notes</label>
                <textarea id="EventDescription" name="EventDescription" class="form-control" rows="2" placeholder="any notes"></textarea>
            </div>

        </div>
        <button type="button"
                class="btn btn-outline-primary d-grid w-100 mb-3" onclick="SaveEvent();">
            Save
        </button>
        <button type="button" id="btnRemove"
                class="btn btn-outline-danger d-grid w-100 mb-3" onclick="RemoveEvent();">
            Remove
        </button>
        <button type="button"
                class="btn btn-outline-secondary d-grid w-100"
                data-bs-dismiss="offcanvas">
            Cancel
        </button>
           
    </div>
</div>
<!-- / Calendar Event -->
